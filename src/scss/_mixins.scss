@mixin bmc-hover {
  &:hover { @content; }
}

@mixin bmc-hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin bmc-base() {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  padding: 0;
  margin: 0;
  font-family: $bmc-base-font-family;
  font-size: $bmc-base-font-size;
  font-weight: $bmc-base-font-weight;
  line-height: $bmc-base-line-height;
  color: $bmc-base-color;
  text-align: left;
  letter-spacing: $bmc-base-letter-spacing;
  background-color: $bmc-base-bg-color;

  -webkit-text-size-adjust: 100%; // stylelint-disable-line property-no-vendor-prefix
  -webkit-tap-highlight-color: rgba($bmc-black, 0);

  [tabindex="-1"]:focus {
    outline: 0 !important; // stylelint-disable-line declaration-no-important
  }

  a:not([href]):not([tabindex]) {
    color: inherit;
    text-decoration: none;

    @include bmc-hover-focus() {
      color: inherit;
      text-decoration: none;
    }

    &:focus {
      outline: 0;
    }
  }

  svg {
    overflow: hidden;
    vertical-align: middle;
  }
}

@mixin bmc-base-link() {
  color: $bmc-base-link-color;
  text-decoration: $bmc-base-link-decoration;
  background-color: transparent;

  @include bmc-hover() {
    color: $bmc-base-link-hover-color;
    text-decoration: $bmc-base-link-hover-decoration;
  }
}

@mixin bmc-card() {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: $bmc-card-bg-color;
  background-clip: border-box;
}

@mixin bmc-card-header() {
  padding: $bmc-card-spacer-y $bmc-card-spacer-x;
  margin-bottom: 0;
  font-weight: $bmc-card-header-font-weight;
  background-color: $bmc-card-header-bg-color;
}

@mixin bmc-card-body() {
  flex: 1 1 auto;
  padding: $bmc-card-spacer-x;
}

@mixin bmc-nav() {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
}

@mixin bmc-nav-link() {
  @include bmc-base-link();

  display: block;
  padding: $bmc-nav-link-padding-y $bmc-nav-link-padding-x;

  @include bmc-hover-focus() {
    text-decoration: none;
  }

  &--active {
    color: $bmc-nav-active-link-color;
    @include bmc-gradient-bg($bmc-nav-active-link-bg-color);
    @include bmc-hover-focus() {
      color: $bmc-nav-active-link-color;
    }
  }
}

@mixin bmc-list-group() {
  display: flex;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
}

@mixin bmc-list-group-item() {
  position: relative;
  display: block;
  padding: $bmc-list-group-item-padding-y $bmc-list-group-item-padding-x;
  margin-bottom: -$bmc-list-group-border-width;
  background-color: $bmc-list-group-bg-color;
  border: $bmc-list-group-border-width solid $bmc-list-group-border-color;
  border-right: 0;
  border-left: 0;

  &:first-child {
    border-top: 0;
  }

  &:last-child {
    border-bottom: 0;
  }

  &--muted {
    color: $bmc-gray-600;
  }
}

@mixin bmc-form-group {
  margin-bottom: $bmc-form-group-margin-bottom;
}

@mixin bmc-form-control {
  display: block;
  width: 100%;
  // height: $input-height;
  padding: $bmc-input-padding-y $bmc-input-padding-x;
  font-family: $bmc-input-font-family;
  font-size: $bmc-input-font-size;
  font-weight: $bmc-input-font-weight;
  line-height: $bmc-input-line-height;
  color: $bmc-input-color;
  letter-spacing: $bmc-base-letter-spacing;
  background-color: $bmc-input-bg-color;
  background-clip: padding-box;
  border: $bmc-input-border-width solid $bmc-input-border-color;

  transition: $bmc-input-transition;

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // // Customize the `:focus` state to imitate native WebKit styles.
  // @include form-control-focus();

  &::placeholder {
    color: $bmc-input-placeholder-color;
    opacity: 1;
  }

  &:disabled {
    cursor: not-allowed;
  }

  &:disabled,
  &[readonly] {
    background-color: $bmc-input-disabled-bg-color;
    opacity: 1;
  }

  &:focus {
    color: $bmc-input-focus-color;
    background-color: $bmc-input-focus-bg-color;
    // stylelint-disable-next-line declaration-no-important
    border-color: $bmc-input-focus-border-color !important;
    outline: 0;
    box-shadow: $bmc-input-focus-box-shadow;
  }

  &:not(:disabled):not([readonly]):hover {
    border-color: $bmc-input-hover-border-color;
  }
}

@mixin bmc-input-group() {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .bmc-form-control {
    position: relative;
    flex: 1 1 auto;
    width: 1%;
    margin-bottom: 0;

    + .bmc-form-control {
      margin-left: -$bmc-input-border-width;
    }
  }

  // Bring the "active" form control to the top of surrounding elements
  > .bmc-form-control:focus {
    z-index: 3;
  }
}

@mixin bmc-input-group-item() {
  display: flex;

  .bmc-button {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 3;
    }
  }

  .bmc-button + .bmc-button {
    margin-left: -$bmc-input-border-width;
  }
}

@mixin bmc-input-group-append() {
  @include bmc-input-group-item();
  margin-left: -$bmc-input-border-width;
}

@mixin bmc-input-group-prepend() {
  @include bmc-input-group-item();
  margin-right: -$bmc-input-border-width;
}

@mixin bmc-input-group-text() {
  display: flex;
  align-items: center;
  padding: $bmc-input-padding-y $bmc-input-padding-x;
  margin-bottom: 0;
  font-size: $bmc-input-font-size;
  font-weight: $bmc-base-font-weight;
  line-height: $bmc-input-line-height;
  color: $bmc-input-group-color;
  text-align: center;
  white-space: nowrap;
  background-color: $bmc-input-group-bg-color;
  border: $bmc-input-border-width solid $bmc-input-group-border-color;
}

@mixin bmc-button() {
  $self: &;
  display: inline-block;
  margin: 0;
  font-family: $bmc-button-font-family;
  font-weight: $bmc-button-font-weight;
  color: $bmc-button-color;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: $bmc-button-border-width solid transparent;
  border-radius: 0;
  transition: $bmc-button-transition;
  @include bmc-button-size(
    $bmc-button-padding-y,
    $bmc-button-padding-x,
    $bmc-button-font-size,
    $bmc-button-line-height
  );

  @include bmc-hover() {
    color: $bmc-button-color;
    text-decoration: none;
  }

  &:focus,
  &--focus {
    z-index: 1;
    outline: 0;
    box-shadow: $bmc-button-focus-box-shadow;
  }

  &--loading {
    cursor: wait !important; // stylelint-disable-line declaration-no-important
  }

  &--disabled,
  &:disabled {
    cursor: not-allowed;
    box-shadow: none;
    opacity: $bmc-button-disabled-opacity;
  }

  &:not(:disabled):not(&--disabled):active,
  &:not(:disabled):not(&--disabled)#{$self}--active {
    box-shadow: $bmc-button-active-box-shadow;
  }

  &--block {
    display: block;
    width: 100%;
  }
}

@mixin bmc-button-group() {
  position: relative;
  display: inline-flex;
  vertical-align: middle;

  > .bmc-button {
    @include bmc-hover() {
      z-index: 2;
    }
    &:focus,
    &:active,
    &--active {
      z-index: 2;
    }
  }
}

@mixin bmc-button-size($padding-y, $padding-x, $font-size, $line-height) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
}

@mixin bmc-button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: bmc-color-yiq($background);
  @include bmc-gradient-bg($background);
  border-color: $border;

  @include bmc-hover() {
    color: bmc-color-yiq($hover-background);
    @include bmc-gradient-bg($hover-background);
    border-color: $hover-border;
    svg {
      fill: bmc-color-yiq($hover-background);
    }
  }

  svg {
    fill: bmc-color-yiq($background);
  }

  &:focus,
  &--focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    box-shadow: 0 0 0 $bmc-button-focus-width rgba(mix(bmc-color-yiq($background), $border, 15%), .5);
  }

  // Disabled comes first so active can properly restyle
  &--disabled,
  &:disabled {
    color: bmc-color-yiq($background);
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $bmc-enable-gradients {
      background-image: none;
    }

    svg {
      fill: bmc-color-yiq($background);
    }
  }

  &:not(:disabled):not(&--disabled):active {
    color: bmc-color-yiq($active-background);
    background-color: $active-background;
    @if $bmc-enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    svg {
      fill: bmc-color-yiq($active-background);
    }

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: 0 0 0 $bmc-button-focus-width rgba(mix(bmc-color-yiq($background), $border, 15%), .5);
    }
  }
}

@mixin bmc-button-outline-variant($color, $color-hover: bmc-color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;

  @include bmc-hover() {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
    svg {
      fill: $color-hover;
    }
  }

  svg {
    fill: $color;
  }

  &:focus,
  &--focus {
    box-shadow: 0 0 0 $bmc-button-focus-width rgba($color, .5);
  }

  &--disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
    svg {
      fill: $color;
    }
  }

  &:not(:disabled):not(&--disabled):active {
    color: bmc-color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
    svg {
      fill: bmc-color-yiq($active-background);
    }

    &:focus {
      box-shadow: 0 0 0 $bmc-button-focus-width rgba($color, .5);
    }
  }
}

@mixin bmc-gradient-bg($color) {
  @if $bmc-enable-gradients {
    background: $color linear-gradient(180deg, mix($bmc-base-bg-color, $color, 15%), $color) repeat-x;
  } @else {
    background-color: $color;
  }
}

@mixin bmc-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin bmc-animate($name, $duration: 1s) {
  animation-name: $name;
  animation-duration: $duration;
  animation-fill-mode: both;
}
